{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nvar EmitterInstance_1 = require(\"./EmitterInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Emitters = function () {\n  function Emitters(container) {\n    var _this = this;\n\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    var overridableContainer = container;\n\n    overridableContainer.addEmitter = function (options, position) {\n      return _this.addEmitter(options, position);\n    };\n  }\n\n  _createClass(Emitters, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.emitters) {\n        if (options.emitters instanceof Array) {\n          this.emitters = options.emitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(options.emitters);\n        }\n      }\n\n      var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = interactivityEmitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityEmitters instanceof Array) {\n            this.interactivityEmitters = new Emitter_1.Emitter();\n          }\n\n          this.interactivityEmitters.load(interactivityEmitters);\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        for (var _iterator = _createForOfIteratorHelperLoose(this.emitters), _step; !(_step = _iterator()).done;) {\n          var emitterOptions = _step.value;\n          this.addEmitter(emitterOptions);\n        }\n      } else {\n        this.addEmitter(this.emitters);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.array), _step2; !(_step2 = _iterator2()).done;) {\n        var emitter = _step2.value;\n        emitter.play();\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.array), _step3; !(_step3 = _iterator3()).done;) {\n        var emitter = _step3.value;\n        emitter.pause();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var emitterOptions = this.emitters;\n      var modeEmitters = this.interactivityEmitters;\n\n      if (mode === Enums_1.EmitterClickMode.emitter) {\n        var emitterModeOptions;\n\n        if (modeEmitters instanceof Array) {\n          if (modeEmitters.length > 0) {\n            emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n          }\n        } else {\n          emitterModeOptions = modeEmitters;\n        }\n\n        var emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n        var ePosition = container.interactivity.mouse.clickPosition;\n        this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.array), _step4; !(_step4 = _iterator4()).done;) {\n        var emitter = _step4.value;\n        emitter.resize();\n      }\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function addEmitter(options, position) {\n      var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":{"version":3,"sources":["/Users/matteo/Projects/GitHub Projects/tsparticles/tsparticles-master/demo/react-native/node_modules/react-native-tsparticles/node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js"],"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Utils_1","Emitter_1","Enums_1","container","array","emitters","interactivityEmitters","overridableContainer","addEmitter","options","position","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","emitter","play","pause","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","Utils","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"]},"metadata":{},"sourceType":"script"}