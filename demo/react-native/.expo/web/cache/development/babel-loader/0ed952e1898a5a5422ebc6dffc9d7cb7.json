{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Attractor = function () {\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    this.container = container;\n  }\n\n  _createClass(Attractor, [{\n    key: \"interact\",\n    value: function interact(p1) {\n      var _a;\n\n      var container = this.container;\n      var distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      var pos1 = p1.getPosition();\n      var query = container.particles.quadTree.queryCircle(pos1, distance);\n\n      for (var _iterator = _createForOfIteratorHelperLoose(query), _step; !(_step = _iterator()).done;) {\n        var p2 = _step.value;\n\n        if (p1 === p2 || !p2.particlesOptions.move.attract.enable || p2.destroyed || p2.spawning) {\n          continue;\n        }\n\n        var pos2 = p2.getPosition();\n\n        var _Utils_1$NumberUtils$ = Utils_1.NumberUtils.getDistances(pos1, pos2),\n            dx = _Utils_1$NumberUtils$.dx,\n            dy = _Utils_1$NumberUtils$.dy;\n\n        var rotate = p1.particlesOptions.move.attract.rotate;\n        var ax = dx / (rotate.x * 1000);\n        var ay = dy / (rotate.y * 1000);\n        p1.velocity.horizontal -= ax;\n        p1.velocity.vertical -= ay;\n        p2.velocity.horizontal += ax;\n        p2.velocity.vertical += ay;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.particlesOptions.move.attract.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Attractor;\n}();\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/matteo/Projects/tests/NativeParticles/node_modules/react-native-tsparticles/node_modules/tsparticles/dist/Interactions/Particles/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Utils_1","require","container","p1","_a","distance","linksDistance","retina","pos1","getPosition","query","particles","quadTree","queryCircle","p2","particlesOptions","move","attract","enable","destroyed","spawning","pos2","NumberUtils","getDistances","dx","dy","rotate","ax","x","ay","y","velocity","horizontal","vertical","particle"],"mappings":"AAAA;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,IAAMC,OAAO,GAAGC,OAAO,eAAvB;;IACMF,S;AACF,qBAAYG,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;;;6BACQC,E,EAAI;AACT,UAAIC,EAAJ;;AACA,UAAMF,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAMG,QAAQ,GAAG,CAACD,EAAE,GAAGD,EAAE,CAACG,aAAT,MAA4B,IAA5B,IAAoCF,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyDF,SAAS,CAACK,MAAV,CAAiBD,aAA3F;AACA,UAAME,IAAI,GAAGL,EAAE,CAACM,WAAH,EAAb;AACA,UAAMC,KAAK,GAAGR,SAAS,CAACS,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+CH,QAA/C,CAAd;;AACA,2DAAiBK,KAAjB,wCAAwB;AAAA,YAAbI,EAAa;;AACpB,YAAIX,EAAE,KAAKW,EAAP,IAAa,CAACA,EAAE,CAACC,gBAAH,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCC,MAA/C,IAAyDJ,EAAE,CAACK,SAA5D,IAAyEL,EAAE,CAACM,QAAhF,EAA0F;AACtF;AACH;;AACD,YAAMC,IAAI,GAAGP,EAAE,CAACL,WAAH,EAAb;;AAJoB,oCAKDT,OAAO,CAACsB,WAAR,CAAoBC,YAApB,CAAiCf,IAAjC,EAAuCa,IAAvC,CALC;AAAA,YAKZG,EALY,yBAKZA,EALY;AAAA,YAKRC,EALQ,yBAKRA,EALQ;;AAMpB,YAAMC,MAAM,GAAGvB,EAAE,CAACY,gBAAH,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCS,MAAhD;AACA,YAAMC,EAAE,GAAGH,EAAE,IAAIE,MAAM,CAACE,CAAP,GAAW,IAAf,CAAb;AACA,YAAMC,EAAE,GAAGJ,EAAE,IAAIC,MAAM,CAACI,CAAP,GAAW,IAAf,CAAb;AACA3B,QAAAA,EAAE,CAAC4B,QAAH,CAAYC,UAAZ,IAA0BL,EAA1B;AACAxB,QAAAA,EAAE,CAAC4B,QAAH,CAAYE,QAAZ,IAAwBJ,EAAxB;AACAf,QAAAA,EAAE,CAACiB,QAAH,CAAYC,UAAZ,IAA0BL,EAA1B;AACAb,QAAAA,EAAE,CAACiB,QAAH,CAAYE,QAAZ,IAAwBJ,EAAxB;AACH;AACJ;;;8BACSK,Q,EAAU;AAChB,aAAOA,QAAQ,CAACnB,gBAAT,CAA0BC,IAA1B,CAA+BC,OAA/B,CAAuCC,MAA9C;AACH;;;4BACO,CACP;;;;;;AAELrB,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.particlesOptions.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n            const rotate = p1.particlesOptions.move.attract.rotate;\n            const ax = dx / (rotate.x * 1000);\n            const ay = dy / (rotate.y * 1000);\n            p1.velocity.horizontal -= ax;\n            p1.velocity.vertical -= ay;\n            p2.velocity.horizontal += ax;\n            p2.velocity.vertical += ay;\n        }\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}