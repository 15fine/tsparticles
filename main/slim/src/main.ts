import { Grabber } from "tsparticles-core/Interactions/External/Grabber";
import { Collider } from "tsparticles-core/Interactions/Particles/Collider";
import { Infecter } from "tsparticles-core/Interactions/Particles/Infecter";
import { Linker } from "tsparticles-core/Interactions/Particles/Linker";
import { LifeUpdater } from "tsparticles-core/Updaters/LifeUpdater";
import { OpacityUpdater } from "tsparticles-core/Updaters/OpacityUpdater";
import { SizeUpdater } from "tsparticles-core/Updaters/SizeUpdater";
import { AngleUpdater } from "tsparticles-core/Updaters/AngleUpdater";
import { ColorUpdater } from "tsparticles-core/Updaters/ColorUpdater";
import { StrokeColorUpdater } from "tsparticles-core/Updaters/StrokeColorUpdater";
import { OutOfCanvasUpdater } from "tsparticles-core/Updaters/OutOfCanvasUpdater";
import { Main } from "tsparticles-core";
import { loadInteraction as loadExternalAttractInteraction } from "tsparticles-interaction-external-attract";
import { loadInteraction as loadExternalBounceInteraction } from "tsparticles-interaction-external-bounce";
import { loadInteraction as loadExternalBubbleInteraction } from "tsparticles-interaction-external-bubble";
import { loadInteraction as loadExternalConnectInteraction } from "tsparticles-interaction-external-connect";
import { loadInteraction as loadExternalRepulseInteraction } from "tsparticles-interaction-external-repulse";
import { loadInteraction as loadParticlesAttractInteraction } from "tsparticles-interaction-particles-attract";
import { loadInteraction as loadParticlesRepulseInteraction } from "tsparticles-interaction-particles-repulse";
import { loadShape as loadCircleShape } from "tsparticles-shape-circle";
import { loadShape as loadImageShape } from "tsparticles-shape-image";
import { loadShape as loadLineShape } from "tsparticles-shape-line";
import { loadShape as loadPolygonShape } from "tsparticles-shape-polygon";
import { loadShape as loadSquareShape } from "tsparticles-shape-square";
import { loadShape as loadStarShape } from "tsparticles-shape-star";
import { loadShape as loadTextShape } from "tsparticles-shape-text";

export function loadSlim(tsParticles: Main): void {
    tsParticles.addParticleUpdater((container) => new LifeUpdater(container));
    tsParticles.addParticleUpdater((container) => new OpacityUpdater(container));
    tsParticles.addParticleUpdater((container) => new SizeUpdater(container));
    tsParticles.addParticleUpdater((container) => new AngleUpdater(container));
    tsParticles.addParticleUpdater((container) => new ColorUpdater(container));
    tsParticles.addParticleUpdater((container) => new StrokeColorUpdater(container));
    tsParticles.addParticleUpdater((container) => new OutOfCanvasUpdater(container));
    loadExternalAttractInteraction(tsParticles);
    loadExternalBounceInteraction(tsParticles);
    loadExternalBubbleInteraction(tsParticles);
    loadExternalConnectInteraction(tsParticles);
    tsParticles.addInteractor((container) => new Grabber(container));
    loadExternalRepulseInteraction(tsParticles);
    loadParticlesAttractInteraction(tsParticles);
    tsParticles.addInteractor((container) => new Collider(container));
    tsParticles.addInteractor((container) => new Infecter(container));
    loadParticlesRepulseInteraction(tsParticles);
    tsParticles.addInteractor((container) => new Linker(container));

    loadCircleShape(tsParticles);
    loadImageShape(tsParticles);
    loadLineShape(tsParticles);
    loadPolygonShape(tsParticles);
    loadSquareShape(tsParticles);
    loadStarShape(tsParticles);
    loadTextShape(tsParticles);
}
